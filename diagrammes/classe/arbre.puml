@startuml "Package arbre"

namespace zoot.arbre {
  ' Includes
  !include expressions.puml
  !include instructions.puml
  ' Classes
  abstract class ArbreAbstrait {
    # int noLigne
    # ArbreAbstrait(int n)
    + int getNoLigne()
    + abstract void verifier()
    + abstract String toMIPS()
  }

  class Programme {
    - int tailleDisplay
    - int tailleZoneVariables
    + Programme(BlocDeFonctions bf, BlocDInstructions b, int n)
    + int getTailleDisplay()
    + int getTailleZoneVariables()
    + void verifier()
    + string toMIPS()
  }

  interface ConteneurDInstructions {
    + Iterator<Instruction> iterator();
    + void ajouter(Ecrire e)
    + void ajouter(Affectation a)
    + void ajouter(Retourne e)
    + void ajouter(ConteneurDInstructions c)
  }

  class BlocDInstructions {
    - int tailleZoneVariables
    + BlocDInstructions(int n)
    + void ajouter(Ecrire e)
    + void ajouter(Affectation a)
    + void ajouter(Retourne r)
    + void verifier()
    + String toMIPS()
    + String toString()
  }

  class Fonction {
    - int tailleZoneVariables
    - String etiquette
    + Fonction(EntreeFonction e, SymboleFonction s, int n)
    + void ajouter(Ecrire e)
    + void ajouter(Affectation a)
    + void ajouter(Retourne r)
    + void ajouter(ConteneurDInstructions c)
    + String getEtiquette()
    + int getTailleZoneVariables()
    + void verifier()
    + String toMIPS()
  }

  class BlocDeFonctions {
    + BlocDeFonctions(int n)
    + void ajouter(Fonction f)
    + void verifier()
    + String toMIPS()
  }
  ' Relations entre les classes
  BlocDInstructions -up-|> ArbreAbstrait
  BlocDInstructions .up.|> ConteneurDInstructions
  BlocDInstructions --"*" zoot.arbre.instructions.Instruction

  Fonction -up-|> ArbreAbstrait
  Fonction .up.|> ConteneurDInstructions
  Fonction *-- zoot.tds.entrees.EntreeFonction
  Fonction *-- zoot.tds.symboles.SymboleFonction
  Fonction *-- BlocDInstructions
  Fonction --"*" zoot.arbre.instructions.Retourne : retournes

  BlocDeFonctions --|> ArbreAbstrait
  BlocDeFonctions --"*" Fonction : fonctions

  ArbreAbstrait ..> zoot.code_generation.MipsGenerator

  Programme --|> ArbreAbstrait
  Programme *-- BlocDeFonctions
  Programme *-- BlocDInstructions 
}

@enduml