@startuml "Package expressions"
namespace zoot.arbre.expressions {
    ' Includes
    ' Classes
    abstract class Expression {
        # Expression(int n)
        + Optional<Type> getType()
    }

    abstract class Constante {
        # String cste
        # Constante(String texte, int n)
        + String toString()
    }

    class ConstanteEntiere {
        + ConstanteEntiere(String texte, int n)
        + Optional<Type> getType()
        + String toMIPS()
    }

    class ConstanteBooleene {
        + ConstanteBooleene(String texte, int n)
        + Optional<Type> getType()
        + String toMIPS()

    }

    abstract class Identifiable {
        - String identifiant
        + Identifiable(String identifiant, int n)
        + Optional<Type> getType()
    }

    class Variable {
        - int deplacement
        - int niveauImbrication
        + Variable(String identifiant, int n)
        + void setDeplacement(int deplacement)
        + int getDeplacement()
        + void setNiveauImbrication(int niveauImbrication)
        + int getNiveauImbrication()
        + void verifier()
        + String toMIPS()
    }

    class AppelFonction {
        - int niveauImbrication
        - int tailleDisplay
        - int tailleZoneParametres
        - String etiquette
        + AppelFonction(String identifiant, int n, Expression... parametres)
        + int getTailleZoneParametres()
        + void setTailleDisplay(int tailleDisplay)
        + int getTailleDisplay()
        + void setNiveauImbrication(int niveauImbrication)
        + int getNiveauImbrication()
        + void setEtiquette(String etiquette)
        + String getEtiquette()
        + Iterator<Expression> getParametres()
        + void verifier()
        + String toMIPS()
    }
    ' Relations entre les classes
    Expression -up-|> zoot.arbre.ArbreAbstrait
    Constante -up-|> Expression
    ConstanteEntiere -up-|> Constante
    ConstanteBooleene -right-|> Constante
    Identifiable *-up- zoot.tds.symboles.Symbole
    Identifiable -left-|> Expression
    Variable -up-|> Identifiable
    AppelFonction -left-|> Identifiable
    AppelFonction --"*" Expression : parametres
}
@enduml