@startuml "tds"

namespace zoot.tds {
  ' Includes

  ' Classes
  class TDS << (S,#FF7700) >> {
    - int niveauImbricationMax
    + TDS getInstance()
    -- Gestion du singleton --
    + EspaceDeNom getEspaceDeNomCourant()
    + void setEspaceDeNomCourant(EspaceDeNom e)
    + void setEtatAnalyse(EtatAnalyse e)
    + void setNiveauImbricationMax(int niveau)
    + int getNiveauImbricationMax()
    -- Actions délégués à EtatAnalyse --
    + void ajouter(Entree entree, Symbole symbole) throws IllegalStateException, DoubleDeclarationException
    + Symbole identifier(Entree entree) throws IllegalStateException, EntreeNonTrouveException
    + int getTailleZoneVariables()
    + void augmenterTailleZoneVariables(int nbOctets) throws IllegalStateException
    + int getTailleDisplay() throws IllegalStateException
    + int getNiveauImbricationCourant()
    + void entreeBloc()
    + void sortieBloc()
    + void allerEtatSuivant()
  }

  class EspaceDeNom {
    - int tailleZoneVariables
    - int noSousEspaceDeNomCourant
    - int niveauImbrication
    + EspaceDeNom(int niveauImbrication)
    + void ajouter(Entree entree, Symbole symbole) throws DoubleDeclarationException
    + Symbole identifier(Entree entree) throws EntreeNonTrouveException
    + int getTailleZoneVariables()
    + void augmenterTailleZoneVariables(int nbOctets)
    + void setEspaceDeNomParent(EspaceDeNom e)
    + void ajouterSousEspaceDeNom(EspaceDeNom n)
    + EspaceDeNom getEspaceDeNomParent()
    + EspaceDeNom getProchainSousEspaceDeNom()
    + void resetParcoursSousEspaceDeNom()
    + int getNiveauImbricationMax()
    + int getNiveauImbrication()
  }

  namespace etats {
    abstract EtatAnalyse {
      # EtatAnalyse(TDS tds)
      + void ajouter(Entree entree, Symbole symbole) throws IllegalStateException, DoubleDeclarationException
      + Symbole identifier(Entree entree) throws IllegalStateException, EntreeNonTrouveException
      + int getTailleZoneVariables()
      + void augmenterTailleZoneVariables(int nbOctets) throws IllegalStateException
      + int getTailleDisplay() throws IllegalStateException
      + int getNiveauImbricationCourant()
      + void entreeBloc()
      + void sortieBloc()
      + void allerEtatSuivant()
    }

    class EtatEnCoursAnalyseSyntaxique {
      + EtatEnCoursAnalyseSyntaxique(TDS tds)
      + void ajouter(Entree entree, Symbole symbole) throws IllegalStateException, DoubleDeclarationException
      + void augmenterTailleZoneVariables(int nbOctets)
      + void entreeBloc()
      + void sortieBloc()
      + void allerEtatSuivant()
    }

    class EtatEnCoursAnalyseSemantique {
      + EtatEnCoursAnalyseSemantique(TDS tds)
      + Symbole identifier(Entree entree) throws IllegalStateException, EntreeNonTrouveException
      + int getTailleDisplay()
      + void entreeBloc()
      + void sortieBloc()
    }
  }


  namespace entrees {
    abstract class Entree {
      # String identifiant
      + Entree(String identifiant)
      + String getIdentifiant()
      + boolean equals(Object objetAComparer)
      + int hashCode()
    }

    class EntreeVariable {
      + EntreeVariable(String identifiant)
      + boolean equals(Object objetAComparer)
    }

    class EntreeFonction {
      + EntreeFonction(String identifiant, Collection<Type> typeParametres)
      + boolean equals(Object objetAComparer)
      + Collection<Type> getTypeParametres()
    }
  }

  namespace symboles {
    abstract class Symbole {
      + Symbole(Type type, EspaceDeNom espaceDeNom)
      + Type getType()
      + void decorer(Variable v)
      + void decorer(AppelFonction a)
    }

    class SymboleVariable {
      - int deplacement
      + SymboleVariable(Type type, EspaceDeNom espaceDeNom)
      + void decorer(Variable v)
      + void setDeplacement(int deplacement)
    }

    class SymboleFonction {
      - String etiquette
      + SymboleFonction(Type type, EspaceDeNom espaceDeNom)
      + void decorer(AppelFonction a)
      + void setEtiquette(String etiquette)
      + String getEtiquette()
    }

    enum Type {
      ENTIER
      BOOLEEN
    }
  }

  ' Relations entre les classes
  TDS --"1" TDS : statique
  TDS --"1" EspaceDeNom : espaceDeNomCourant
  TDS "1"-left-"1" EtatAnalyse : etatCourant
  EspaceDeNom --"*" Entree
  EspaceDeNom "1"--"*" Symbole
  Symbole *-left- Type
  SymboleVariable -up-|> Symbole
  EntreeVariable -up-|> Entree
  SymboleFonction -up-|> Symbole
  EntreeFonction -up-|> Entree
  EntreeFonction --"*" Type : typeParametres
  EtatEnCoursAnalyseSemantique -up-|> EtatAnalyse
  EtatEnCoursAnalyseSyntaxique -up-|> EtatAnalyse
  EspaceDeNom --"1" EspaceDeNom : parent
  EspaceDeNom --"*" EspaceDeNom : enfants
}

@enduml
