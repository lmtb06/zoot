@startuml "Package exceptions"

namespace zoot.exceptions {
    ' Includes
    ' Classes
    abstract class AnalyseException {
        # AnalyseException(String m)
    }

    class AnalyseLexicaleException {
        + AnalyseLexicaleException(int ligne, int colonne, String m)
    }

    class AnalyseSyntaxiqueException {
        + AnalyseSyntaxiqueException(String m)
    }

    class AnalyseSemantiqueException {
        + AnalyseSemantiqueException(String m)
    }

    class GestionnaireExceptionsSemantiques << (S,#FF7700) >> {
        - GestionnaireExceptionsSemantiques()
        + GestionnaireExceptionsSemantiques getInstance()
        + void ajouter(AnalyseSemantiqueException e)
        + int getNbExceptions()
        + String getMessagesExceptions()
    }

    class AnalyseSemantiqueDecorator {
        AnalyseSemantiqueDecorator(AnalyseSemantiqueException e)
        + String getMessage()
        + String getLocalizedMessage()
    }

    class DoubleDeclarationException {
        + DoubleDeclarationException(EntreeVariable v)
    }

    class TypeIncompatibleException {
        + TypeIncompatibleException(Type destination, Type source)
    }

    class EntreeNonTrouveException {
        + EntreeNonTrouveException(Entree e)
    }

    class VariableNonDeclarerException {
        + VariableNonDeclarerException(EntreeVariable e)
    }

    class FonctionNonDeclarerException {
        + FonctionNonDeclarerException(EntreeFonction e)
    }

    class FonctionSansRetourneException {
        + FonctionSansRetourneException(Fonction f)
    }

    class TypeIncompatibleAvecBinaireException {
        + TypeIncompatibleAvecBinaireException(Type typeOperateur, Type typeGauche, Type typeDroite)
    }

    class TypeConditionException {
        + TypeConditionConditionException (Type typeObtenu)
    }

    class TypeConditionBoucleException {
        + TypeConditionBoucleException (Type typeObtenu)
    }

    class LigneDecorator {
        - int ligne
        + LigneDecorator(int ligne, AnalyseSemantiqueException)
        + String getMessage()
        + String getLocalizedMessage()
    }

    ' Relations entre les classes
    AnalyseException -up-|> RuntimeException
    AnalyseLexicaleException -up-|> AnalyseException
    AnalyseSyntaxiqueException -up-|> AnalyseException
    AnalyseSemantiqueException -up-|> AnalyseException
    AnalyseSemantiqueDecorator -up-|> AnalyseSemantiqueException
    AnalyseSemantiqueDecorator *-- AnalyseSemantiqueException
    DoubleDeclarationException -up-|> AnalyseSemantiqueException
    TypeIncompatibleException -up-|> AnalyseSemantiqueException
    VariableNonDeclarerException -left-|> AnalyseSemantiqueException
    FonctionNonDeclarerException -up-|> AnalyseSemantiqueException
    EntreeNonTrouveException -up-|> AnalyseSemantiqueException
    FonctionSansRetourneException -up-|> AnalyseSemantiqueException
    LigneDecorator --|> AnalyseSemantiqueDecorator
    GestionnaireExceptionsSemantiques -down-"*" AnalyseSemantiqueException
    TypeIncompatibleAvecBinaireException -down-|> AnalyseSemantiqueException
    TypeConditionBoucleException --|> AnalyseSemantiqueException
    TypeConditionConditionException --|> AnalyseSemantiqueException
}
@enduml